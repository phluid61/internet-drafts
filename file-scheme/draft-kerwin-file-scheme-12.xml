<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<rfc ipr="trust200902" docName="draft-kerwin-file-scheme-12" category="std" obsoletes="1738">

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

  <front>
    <title abbrev="file-scheme">The file URI Scheme</title>

    <author initials="M." surname="Kerwin" fullname="Matthew Kerwin">
      <organization>QUT</organization>
      <address>
        <email>matthew.kerwin@qut.edu.au</email>
      </address>
    </author>

    <date year="2014"/>

    <area>General</area>
    <workgroup>Independent Submission</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document specifies the “file” Uniform Resource Identifier (URI)
scheme, replacing the definition in RFC 1738.</t>

<t><spanx style="strong">Note to Readers (To be removed by the RFC Editor)</spanx></t>

<t>This draft should be discussed on its github project page
<eref target="https://github.com/phluid61/internet-drafts/">https://github.com/phluid61/internet-drafts/</eref>.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>A file URI identifies a file on a particular file system.  It can be
used in discussions about the file, and if other conditions are met it
can be dereferenced to directly access the file.</t>

<t>The file URI scheme is not coupled with a specific protocol. As such,
there is no well-defined set of methods that can be performed on file
URIs, nor a media type associated with them.</t>

<section anchor="history" title="History">

<t>The file URI scheme was first defined in <xref target="RFC1630"/>, which, being an
informational RFC, does not specify an Internet standard.  The
definition was standardised in <xref target="RFC1738"/>, and the scheme was
registered with the Internet Assigned Numbers Authority (IANA);
however that definition omitted certain language included by former
that clarified aspects such as:</t>

<t><list style="symbols">
  <t>the use of slashes to denote boundaries between directory
levels of a hierarchical file system; and</t>
  <t>the requirement that client software convert the file URI
into a file name in the local file name conventions.</t>
</list></t>

<t>The Internet draft <xref target="I-D.draft-hoffman-file-uri"/> was written in an
effort to keep the file URI scheme on standards track when <xref target="RFC1738"/>
was made obsolete, but that draft expired in 2005.  It enumerated
concerns arising from the various, often conflicting implementations
of the scheme.  It serves as the spiritual predecessor of this document.</t>

<t>Additionally the WHATWG defines a living URL standard <xref target="WHATWG-URL"/>,
which includes algorithms for interpreting file URIs (as URLs).</t>

</section>
<section anchor="unc" title="UNC">

<t>The Universal Naming Convention (UNC) <xref target="MS-DTYP"/> defines a string
format that can perform a similar role in describing the location of
files. This UNC filespace selector string has three parts: host,
share, and path. This document describes a means of translating
between UNC filespace selector strings and file URIs.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
<section anchor="idealism-vs-pragmatism-vs-history" title="Idealism vs Pragmatism vs History">

<t>Because the file URI scheme has a long history of loosely-defined
standardisation and divergent implementations, this document will
inevitably make some assertions that go against some implementers’
expectations. We will attempt to label all assertions as either
“ideal” preferred behaviour or practical behaviour to support
compatibility and interoperability, and in all cases we will attempt to
describe the difference between this and any previous specifications.</t>

</section>
</section>
<section anchor="syntax" title="Syntax">

<t>The file URI syntax is defined here in Augmented Backus-Naur Form (ABNF)
<xref target="RFC5234"/>, including the core ABNF syntax rule <spanx style="verb">ALPHA</spanx> defined by that
specification, and importing the <spanx style="verb">userinfo</spanx>, <spanx style="verb">host</spanx>, <spanx style="verb">path-absolute</spanx>,
and <spanx style="verb">query</spanx> rules from <xref target="RFC3986"/> (as updated by <xref target="RFC6874"/>.)</t>

<figure><artwork><![CDATA[
   file-URI       = f-scheme ":" f-hier-part [ "?" query ]

   f-scheme       = "file"

   f-hier-part    = "//" auth-path
                  / local-path

   auth-path      = [ f-auth ] path-absolute
                  / unc-path
                  / windows-path

   f-auth         = [ userinfo "@" ] host

   local-path     = path-absolute
                  / windows-path

   unc-path       = 2\*3"/" authority path-absolute

   windows-path   = drive-letter path-absolute
   drive-letter   = ALPHA [ drive-marker ]
   drive-marker   = ":" / "|"
]]></artwork></figure>

<t>Note well: the <spanx style="verb">drive-marker</spanx> rule intentionally includes a bar
character “|” even though that character is not part of either the
unreserved or reserved character sets in <xref target="RFC3986"/>, and thus would
normally have to be percent-encoded to be included in a URI. This
specification explicitly supports parsing of otherwise invalid URIs –
with an unencoded bar character forming part of a DOS or Windows drive
letter identifier – for parsing extant historical URIs, but new URIs of
this form MUST NOT be generated.</t>

<t>The query field contains non-hierarchical data that, along with
data in the path components (path-absolute, unc-path, or windows-path)
serves to identify a resource. This is not commonly used in practice,
but could be used to refer to a specific version of a file in a
versioning file system, for example.</t>

<t>Systems exhibit different levels of case-sensitivity. Unless the file
system is known to be case-insensitive, implementations MUST maintain
the case of file and directory names when translating file URIs to and
from the local system’s representation of file paths, and any systems or
devices that transport file URIs MUST NOT alter the case of file URIs
they transport.</t>

<t>The syntax definition above is necessarily different from those given in
<xref target="RFC1630"/> and <xref target="RFC1738"/> because it depends on the generic syntax
from <xref target="RFC3986"/> that post-dates all previous specifications.</t>

<t>It is intended to support file URIs that take the following forms:</t>

<t>Local files:</t>

<t><list style="symbols">
  <t><spanx style="verb">file:///path/to/file</spanx>  <list style='empty'>
      <t>A “traditional” file URI for a local file, with an empty
   authority. This is the most common format in use today, despite
   being technically incompatible with the definition in <xref target="RFC1738"/>.</t>
    </list></t>
  <t><spanx style="verb">file:///c:/path/to/file</spanx>  <list style='empty'>
      <t>The traditional representation of a local file in a DOS- or
   Windows-based environment.</t>
    </list></t>
  <t><spanx style="verb">file:/path/to/file</spanx>  <list style='empty'>
      <t>The ideal representation of a local file in a UNIX-like
   environment, with no authority field and an absolute path
   that begins with a slash “/”.</t>
    </list></t>
  <t><spanx style="verb">file:c:/path/to/file</spanx>  <list style='empty'>
      <t>The ideal representation of a local file in a DOS- or
   Windows-based environment, with no authority field and an
   absolute path that begins with a drive letter.</t>
    </list></t>
  <t><spanx style="verb">file:///c/path/to/file</spanx></t>
  <t><spanx style="verb">file:/c/path/to/file</spanx></t>
  <t><spanx style="verb">file:c/path/to/file</spanx>  <list style='empty'>
      <t>Representations of a local file in a DOS- or Windows-based
   environment, using alternative representations of drive letters.
   These are supported for compatibility with historical
   implementationsm, but deprecated by this specification.</t>
    </list></t>
  <t><spanx style="verb">file:/c:/path/to/file</spanx>  <list style='empty'>
      <t>A representation of a local file in a DOS- or Windows-based
   environment, with no authority field and a slash preceding
   the drive letter. This representation is less common than those
   above, and is deprecated by this specification.</t>
    </list></t>
</list></t>

<t>Non-local files:</t>

<t><list style="symbols">
  <t><spanx style="verb">file://host.example.com/path/to/file</spanx>  <list style='empty'>
      <t>The ideal representation of a non-local file, with an explicit
   authority.</t>
    </list></t>
  <t><spanx style="verb">file:////host.example.com/path/to/file</spanx>  <list style='empty'>
      <t>The “traditional” representation of a non-local file, with an
   empty authority and a complete (transformed) UNC string in the
   path. This encoding is commonly implemented, but the ideal
   representation above is preferred by this specification.</t>
    </list></t>
  <t><spanx style="verb">file://///host.example.com/path/to/file</spanx>  <list style='empty'>
      <t>As above, with an extra slash between the empty authority and the
   transformed UNC string, conformant with the definition from
   <xref target="RFC1738"/>. This representation is deprecated by this
   specification. It is notably used by the Firefox web browser.</t>
    </list></t>
</list></t>

<t>Dubious encodings:</t>

<t><list style="symbols">
  <t><spanx style="verb">file://c:/path/to/file</spanx></t>
  <t><spanx style="verb">file://c/path/to/file</spanx>  <list style='empty'>
      <t>An encoding that includes a Windows drive letter as the authority
   field. This encoding exists in some extant implementations, and is
   supported by the grammar for historical reasons. New URIs of this
   form SHOULD NOT be generated.</t>
    </list></t>
  <t><spanx style="verb">file:///c|/path/to/file</spanx></t>
  <t><spanx style="verb">file://c|/path/to/file</spanx></t>
  <t><spanx style="verb">file:/c|/path/to/file</spanx></t>
  <t><spanx style="verb">file:c|/path/to/file</spanx>  <list style='empty'>
      <t>Various otherwise-invalid URIs that include a disallowed bar
   character “|” in the drive letter. These encodings are supported
   by the grammar for historical reasons. As noted above, new URIs of
   this form MUST NOT be generated.</t>
    </list></t>
</list></t>

<t>It also intentionally excludes URIs of the form:</t>

<t><list style="symbols">
  <t><spanx style="verb">file://auth.example.com//host.example.com/path/to/file</spanx>  <list style='empty'>
      <t>An encoding that includes both a non-local authority, and a UNC
   string. The traditional implication was that the shared object
   described by the UNC string may only be accessed from the machine
   <spanx style="verb">auth.example.com</spanx>.</t>
    </list></t>
</list></t>

</section>
<section anchor="methods-on-file-uris" title="Methods on file URIs">

<t>In the strictest terms, the only operations that can be performed on a
file URI are translating it to and from a file path; subsequent methods
are performed on the resulting file path, and depend entirely on the
file system’s APIs.</t>

<t>For example, consider the POSIX <spanx style="verb">open()</spanx>, <spanx style="verb">read()</spanx>, and <spanx style="verb">close()</spanx>
methods <xref target="POSIX"/> for reading a file’s contents into memory.</t>

<t>The local file system API can only be used if the file URI has a blank
(or absent) authority and the path, when transformed to the local
system’s conventions, is not a UNC string. Note that this differs from
the definition in <xref target="RFC1738"/> in that previously an authority containing
the text “localhost” was used to refer to the local file system, but in
this specification it translates to a UNC string referring to the host
“localhost”.</t>

<t>This specification does not define a mechanism for accessing files
stored on non-local file systems.</t>

<section anchor="translating-local-file-path-to-file-uri" title="Translating Local File Path to file URI">

<t>Below is an algorithmic description of the process used to convert a
file path to an Internationalized Resource Identifier (IRI) 
<xref target="RFC3987"/>, which can then be translated to a URI as per Section 3.1
of <xref target="RFC3987"/> (see: <xref target="encoding"/>).</t>

<t><list style="numbers">
  <t>Resolve the file path to its fully qualified absolute form.</t>
  <t>Initialise the URI with the “file:” scheme identifier.</t>
  <t>If including an empty authority field, append the “//” sigil to
the URI.</t>
  <t>Append the root directory:  <list style="symbols">
      <t>On a DOS- or Windows-based system, assign the drive letter
(e.g. “c:”) as the first path segment, and append it to the
URI, followed by a slash character “/”.      <list style="symbols">
          <t>If an empty authority was included at step 3, a slash “/”
is prepended to the drive letter (e.g. “/c:”) to
distinguish it from the authority.</t>
        </list></t>
      <t>On an OpenVMS Files-11 system, append a slash “/” to the URI,
and encode the device name as the first segment as per step 5,
below, except that the dollars sign character “$” is not
treated as a reserved character.</t>
      <t>On a UNIX-like system, append a slash “/” to the URI, to
denote the root directory.</t>
    </list></t>
  <t>For each directory in the path after the root:  <list style="numbers">
      <t>Transform the directory name to a path segment (<xref target="RFC3986"/>,
Section 3.3) as per Section 2 of <xref target="RFC3986"/>.</t>
      <t>Append the transformed segment and a delimiting slash character
“/” to the URI.</t>
    </list></t>
  <t>If the path includes a file name:  <list style="numbers">
      <t>Transform the file name to a path segment as above.</t>
      <t>Append the transformed segment to the URI.</t>
    </list></t>
  <t>If any non-hierarchical data is required to identify the file (for
example a version number in a versioning file system):  <list style="numbers">
      <t>Append a question mark character “?” to the URI.</t>
      <t>Transform the non-hierarchical data to a query field
(<xref target="RFC3986"/>, Section 3.4) as per Section 2 of <xref target="RFC3986"/>.</t>
      <t>Append the transformed query field to the URI.</t>
    </list></t>
</list></t>

<t>Examples:</t>

<figure><artwork><![CDATA[
   File Path                      | URIs (ideal, traditional)
   -------------------------------+--------------------------------
   UNIX-Like:                     |
     /path/to/file                | file:/path/to/file
                                  | file:///path/to/file
                                  |
     /path/to/dir/                | file:/path/to/dir/
                                  | file:///path/to/dir/
                                  |
   DOS- or Windows-based:         |
     c:\path\to\file.txt          | file:c:/path/to/file.txt
                                  | file:///c:/path/to/file.txt
                                  |
     c:\path\to\dir\              | file:c:/path/to/dir/
                                  | file:///c:/path/to/dir/
   VMS Files-11:                  |
     ::DISK1:[PATH.TO]FILE.TXT;2  | file:/DISK1/PATH/TO/FILE.TXT?2
                                  | file:///DISK1/PATH/TO/FILE.TXT?2
                                  |
]]></artwork></figure>

<t><spanx style="strong">Differences from RFC 1738</spanx></t>

<t>In <xref target="RFC1738"/> a file URL always started with the token “file://”,
followed by an authority and a “/”. That “/” was not considered part
of the path. This implies that the correct encoding for the above
example file path in a UNIX-like environment would have been:</t>

<figure><artwork><![CDATA[
     token     + authority + slash + path
   = "file://" + ""        + "/"   + "/path/to/file.txt"
   = "file:////path/to/file.txt"
]]></artwork></figure>

<t>However that construct was never used in practice.</t>

<t><spanx style="strong">Exceptions</spanx></t>

<t><list style="hanging">
  <t hangText='DOS/Windows:'><vspace blankLines='0'/>
  Some implementations leave the leading slash off before
the drive letter when authority is blank, e.g. <spanx style="verb">file://c:/...</spanx></t>
  <t hangText='DOS/Windows:'><vspace blankLines='0'/>
  Some implementations replace “:” with “|”, and others
leave it off completely. e.g. <spanx style="verb">file:///c|/...</spanx> or <spanx style="verb">file:///c/...</spanx></t>
</list></t>

</section>
<section anchor="translating-unc-string-to-file-uri" title="Translating UNC String to file URI">

<t>A UNC filespace selector string can be directly translated to an
Internationalized Resource Identifier (IRI) <xref target="RFC3987"/>, which can
then be translated to a URI as per Section 3.1 of <xref target="RFC3987"/> (see:
<xref target="encoding"/>).</t>

<t><list style="numbers">
  <t>Initialise the URI with the “file:” scheme identifier.</t>
  <t>Append the authority:  <list style="numbers">
      <t>Append the “//” authority sigil to the URI.</t>
      <t>Append the hostname field of the UNC string to the URI.</t>
    </list></t>
  <t>For each objectname:  <list style="numbers">
      <t>Transform the objectname to a path segment (<xref target="RFC3986"/>,
Section 3.3) as per Section 2 of <xref target="RFC3986"/>.</t>
      <t>Append a delimiting slash character “/” and the transformed
segment to the URI.</t>
    </list></t>
</list></t>

<t>Example:</t>

<figure><artwork><![CDATA[
   UNC String:   \\host.example.com\Share\path\to\file.txt
   URI:          file://host.example.com/Share/path/to/file.txt
]]></artwork></figure>

<t><spanx style="strong">Exceptions</spanx></t>

<t>Many implementations accept the full UNC string in the URI path (with
all backslashes “\” converted to slashes “/”).  Additionally, because
<xref target="RFC1738"/> said that the first “/” after “file://[authority]” wasn’t
part of the path, Firefox requires an additional slash before the
UNC string.</t>

<t>For example:</t>

<figure><artwork><![CDATA[
   Traditional:
       file:////hostname/share/object/names
       \_____/\__________________________ /
       Scheme     Transformed UNC string

   Firefox:
       file://///hostname/share/object/names
       \_____/|\__________________________ /
       Scheme |    Transformed UNC string
              Extra slash
]]></artwork></figure>

</section>
<section anchor="translating-non-local-file-path-to-file-uri" title="Translating Non-local File Path to file URI">

<t>Translating a non-local file path other than a UNC string to a file URI
follows the same basic algorithm as for local files, above, except that
the authority MUST refer to the network-accesible node that hosts the
file.</t>

<t>For example, in a clustered OpenVMS Files-11 system the authority
would contain the node name. Where the original node reference includes
a username and password in an access control string, they MAY be
transcribed into the userinfo field of the authority (<xref target="RFC3986"/>,
Section 3.2.1), security considerations (<xref target="security"/>) notwithstanding.</t>

<!-- ## Translating file URI to ... -->

</section>
<section anchor="incompat" title="Incompatible File Paths">

<t>Some conventional file path formats are known to be incompatible with
the file URI scheme.</t>

<section anchor="namespaces" title="Namespaces">

<t>The Microsoft Windows API defines Win32 Namespaces <xref target="Win32-Namespaces"/>
for interacting with files and devices using Windows API functions.
These namespaced paths are prefixed by “\\?\” for Win32 File
Namespaces and “\\.\” for Win32 Device Namespaces. There is also a
special case for UNC file paths <xref target="MS-DTYP"/> in Win32 File Namespaces,
referred to as “Long UNC”, using the prefix “\\?\UNC\”.</t>

<t>This specification does not define a mechanism for translating
namespaced paths to or from file URIs.</t>

</section>
</section>
</section>
<section anchor="encoding" title="Encoding">

<t>The encoding of a file URI depends on the file system. If the file
system uses a known non-Unicode character encoding, the path SHOULD be
converted to a sequence of characters from the Universal Character Set
<xref target="ISO10646"/> normalized according to Normalization Form C (NFC) 
<xref target="UTR15"/>, before being translated to a file URI, and conversely a file
URI SHOULD be converted back to the file system’s native encoding when
translating to a file path.</t>

<t><list style='empty'>
  <t>Note that many modern file systems encode directory and file names
as arbitrary sequences of octets. In those cases, the representation
as an encoded string often depends on the user’s localization
settings, or defaults to UTF-8 <xref target="STD63"/>.</t>
</list></t>

<t>When the file system’s encoding is not known the file URI SHOULD be
transported as an Internationalized Resource Identifier (IRI)
<xref target="RFC3987"/>.</t>

<t>Example: file IRI:</t>

<figure><artwork><![CDATA[
| Bytes of file IRI in a UTF-8 document:
|    66 69 6c 65 3a 43 3a 2f 72 65 c3 a7 75 2e 74 78 74
|
| Interpretation:
|    A file named "recu.txt" with a cedilla on the "c", in the
|    directory "C:\" of a DOS or Windows file system.
|
| Character value sequences of file paths, for various file system
| encodings:
|
|  o UTF-16 (e.g. NTFS):
|       0043 003a 005c 0072 0065 00e7 0075 002e 0074 0078 0074
|
|  o Codepage 437 (e.g. MS-DOS):
|       43 3a 5c 72 65 87 75 2e 74 78 74
]]></artwork></figure>

<t>Counter-example: ambiguous file URI:</t>

<figure><artwork><![CDATA[
| File URI, in any ASCII-compatible document:
|    "file:///%E3%81%A1"
|
| Possible interpretations of the file name, depending on the
| (unknown) encoding of the file system:
|
|  o UTF-8:
|       <HIRAGANA LETTER TI (U+3061)>
|
|  o Codepage 437:
|       <GREEK SMALL LETTER PI (U+03C0)>
|       <LATIN SMALL LETTER U WITH DIAERESIS (U+00FC)>
|       <LATIN SMALL LETTER I WITH ACUTE (U+00ED)>
|
|  o EBCDIC:
|       "Ta~"
|
|  o US-ASCII:
|       "%E3%81%A1"
|
| etc.
]]></artwork></figure>

</section>
<section anchor="security" title="Security Considerations">

<t>There are many security considerations for URI schemes discussed in
<xref target="RFC3986"/>.</t>

<t>File access and the granting of privileges for specific operations
are complex topics, and the use of file URIs can complicate the
security model in effect for file privileges.  Software using file
URIs MUST NOT grant greater access than would be available for other
file access methods.</t>

<t>Additionally, as discussed in the HP OpenVMS Systems Documentation
<eref target="http://h71000.www7.hp.com/doc/84final/ba554_90015/ch03s09.html">http://h71000.www7.hp.com/doc/84final/ba554_90015/ch03s09.html</eref>
“access control strings include sufficient information to allow someone
to break in to the remote account, [therefore] they create serious
security exposure.” In a similar vein, the presence of a password in a
“user:password” userinfo field is deprecated by <xref target="RFC3986"/>. As such,
the userinfo field of a file URI, if present, MUST NOT contain a
password.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>IANA maintains the registry of URI Schemes <xref target="BCP115"/> at
<eref target="http://www.iana.org/assignments/uri-schemes/">http://www.iana.org/assignments/uri-schemes/</eref>.</t>

<t>This document defines the following URI scheme, so the “Permanent
URI Schemes” registry has been updated accordingly.</t>

<texttable>
      <ttcol align='left'>URI Scheme</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>file</c>
      <c>Host-specific file names</c>
      <c>RFC XXXX</c>
</texttable>

<t><spanx style="strong">RFC Editor Note:</spanx> Replace XXXX with this RFC’s reference.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>This specification is derived from <xref target="RFC1738"/>, <xref target="RFC3986"/>, and
<xref target="I-D.draft-hoffman-file-uri"/> (expired); the acknowledgements in
those documents still apply.</t>

<t>Additional thanks to Dave Risney, author of the informative
IE Blog article <eref target="http://blogs.msdn.com/b/ie/archive/2006/12/06/file-uris-in-windows.aspx">http://blogs.msdn.com/b/ie/archive/2006/12/06/file-uris-in-windows.aspx</eref>,
and Dave Thaler for their comments and suggestions.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

<reference anchor="BCP115" >
  <front>
    <title>Guidelines and Registration Procedures for New URI Schemes</title>
    <author initials="T." surname="Hansen" fullname="T.Hansen">
      <organization></organization>
    </author>
    <author initials="T." surname="Hardie" fullname="T.Hardie">
      <organization></organization>
    </author>
    <author initials="L." surname="Masinter" fullname="L. Masinter">
      <organization></organization>
    </author>
    <date year="2006" month="February"/>
  </front>
  <seriesInfo name="BCP" value="35"/>
  <seriesInfo name="RFC" value="4395"/>
</reference>




<reference anchor='RFC1035'>

<front>
<title abbrev='Domain Implementation and Specification'>Domain names - implementation and specification</title>
<author initials='P.' surname='Mockapetris' fullname='P. Mockapetris'>
<organization>USC/ISI</organization>
<address>
<postal>
<street>4676 Admiralty Way</street>
<city>Marina del Rey</city>
<region>CA</region>
<code>90291</code>
<country>US</country></postal>
<phone>+1 213 822 1511</phone></address></author>
<date year='1987' day='1' month='November' /></front>

<seriesInfo name='STD' value='13' />
<seriesInfo name='RFC' value='1035' />
<format type='TXT' octets='125626' target='http://www.rfc-editor.org/rfc/rfc1035.txt' />
</reference>



<reference anchor='RFC1123'>

<front>
<title>Requirements for Internet Hosts - Application and Support</title>
<author initials='R.' surname='Braden' fullname='Robert Braden'>
<organization>University of Southern California (USC), Information Sciences Institute</organization>
<address>
<postal>
<street>4676 Admiralty Way</street>
<city>Marina del Rey</city>
<region>CA</region>
<code>90292-6695</code>
<country>US</country></postal>
<phone>+1 213 822 1511</phone>
<email>Braden@ISI.EDU</email></address></author>
<date year='1989' month='October' /></front>

<seriesInfo name='STD' value='3' />
<seriesInfo name='RFC' value='1123' />
<format type='TXT' octets='245503' target='http://www.rfc-editor.org/rfc/rfc1123.txt' />
</reference>



<reference anchor='RFC2119'>

<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass. Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date year='1997' month='March' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>

<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='http://www.rfc-editor.org/rfc/rfc2119.txt' />
<format type='HTML' octets='17970' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5777' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>



<reference anchor='RFC3986'>

<front>
<title abbrev='URI Generic Syntax'>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='Tim Berners-Lee'>
<organization abbrev='W3C/MIT'>World Wide Web Consortium</organization>
<address>
<postal>
<street>Massachusetts Institute of Technology</street>
<street>77 Massachusetts Avenue</street>
<city>Cambridge</city>
<region>MA</region>
<code>02139</code>
<country>USA</country></postal>
<phone>+1-617-253-5702</phone>
<facsimile>+1-617-258-5999</facsimile>
<email>timbl@w3.org</email>
<uri>http://www.w3.org/People/Berners-Lee/</uri></address></author>
<author initials='R.' surname='Fielding' fullname='Roy T. Fielding'>
<organization abbrev='Day Software'>Day Software</organization>
<address>
<postal>
<street>5251 California Ave., Suite 110</street>
<city>Irvine</city>
<region>CA</region>
<code>92617</code>
<country>USA</country></postal>
<phone>+1-949-679-2960</phone>
<facsimile>+1-949-679-2972</facsimile>
<email>fielding@gbiv.com</email>
<uri>http://roy.gbiv.com/</uri></address></author>
<author initials='L.' surname='Masinter' fullname='Larry Masinter'>
<organization abbrev='Adobe Systems'>Adobe Systems Incorporated</organization>
<address>
<postal>
<street>345 Park Ave</street>
<city>San Jose</city>
<region>CA</region>
<code>95110</code>
<country>USA</country></postal>
<phone>+1-408-536-3024</phone>
<email>LMM@acm.org</email>
<uri>http://larry.masinter.net/</uri></address></author>
<date year='2005' month='January' />
<area>Applications</area>
<keyword>uniform resource identifier</keyword>
<keyword>URI</keyword>
<keyword>URL</keyword>
<keyword>URN</keyword>
<keyword>WWW</keyword>
<keyword>resource</keyword>
<abstract>
<t>
A Uniform Resource Identifier (URI) is a compact sequence of characters
that identifies an abstract or physical resource.  This specification
defines the generic URI syntax and a process for resolving URI references
that might be in relative form, along with guidelines and security
considerations for the use of URIs on the Internet.
The URI syntax defines a grammar that is a superset of all valid URIs,
allowing an implementation to parse the common components of a URI
reference without knowing the scheme-specific requirements of every
possible identifier.  This specification does not define a generative
grammar for URIs; that task is performed by the individual
specifications of each URI scheme.
</t></abstract></front>

<seriesInfo name='STD' value='66' />
<seriesInfo name='RFC' value='3986' />
<format type='TXT' octets='141811' target='http://www.rfc-editor.org/rfc/rfc3986.txt' />
<format type='HTML' octets='214067' target='http://xml.resource.org/public/rfc/html/rfc3986.html' />
<format type='XML' octets='163534' target='http://xml.resource.org/public/rfc/xml/rfc3986.xml' />
</reference>



<reference anchor='RFC3987'>

<front>
<title>Internationalized Resource Identifiers (IRIs)</title>
<author initials='M.' surname='Duerst' fullname='M. Duerst'>
<organization /></author>
<author initials='M.' surname='Suignard' fullname='M. Suignard'>
<organization /></author>
<date year='2005' month='January' />
<abstract>
<t>This document defines a new protocol element, the Internationalized Resource Identifier (IRI), as a complement of the Uniform Resource Identifier (URI). An IRI is a sequence of characters from the Universal Character Set (Unicode/ISO 10646). A mapping from IRIs to URIs is defined, which means that IRIs can be used instead of URIs, where appropriate, to identify resources.&lt;/t>&lt;t> The approach of defining a new protocol element was chosen instead of extending or changing the definition of URIs. This was done in order to allow a clear distinction and to avoid incompatibilities with existing software. Guidelines are provided for the use and deployment of IRIs in various protocols, formats, and software components that currently deal with URIs.</t></abstract></front>

<seriesInfo name='RFC' value='3987' />
<format type='TXT' octets='111190' target='http://www.rfc-editor.org/rfc/rfc3987.txt' />
</reference>



<reference anchor='RFC4291'>

<front>
<title>IP Version 6 Addressing Architecture</title>
<author initials='R.' surname='Hinden' fullname='R. Hinden'>
<organization /></author>
<author initials='S.' surname='Deering' fullname='S. Deering'>
<organization /></author>
<date year='2006' month='February' />
<abstract>
<t>This specification defines the addressing architecture of the IP Version 6 (IPv6) protocol. The document includes the IPv6 addressing model, text representations of IPv6 addresses, definition of IPv6 unicast addresses, anycast addresses, and multicast addresses, and an IPv6 node's required addresses.&lt;/t>&lt;t> This document obsoletes RFC 3513, "IP Version 6 Addressing Architecture". [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='4291' />
<format type='TXT' octets='52897' target='http://www.rfc-editor.org/rfc/rfc4291.txt' />
</reference>



<reference anchor='RFC5234'>

<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker'>
<organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'>
<organization /></author>
<date year='2008' month='January' />
<abstract>
<t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF.  It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='STD' value='68' />
<seriesInfo name='RFC' value='5234' />
<format type='TXT' octets='26359' target='http://www.rfc-editor.org/rfc/rfc5234.txt' />
</reference>



<reference anchor='RFC6874'>

<front>
<title>Representing IPv6 Zone Identifiers in Address Literals and Uniform Resource Identifiers</title>
<author initials='B.' surname='Carpenter' fullname='B. Carpenter'>
<organization /></author>
<author initials='S.' surname='Cheshire' fullname='S. Cheshire'>
<organization /></author>
<author initials='R.' surname='Hinden' fullname='R. Hinden'>
<organization /></author>
<date year='2013' month='February' />
<abstract>
<t>This document describes how the zone identifier of an IPv6 scoped address, defined as &amp;lt;zone_id&amp;gt; in the IPv6 Scoped Address Architecture (RFC 4007), can be represented in a literal IPv6 address and in a Uniform Resource Identifier that includes such a literal address.  It updates the URI Generic Syntax specification (RFC 3986) accordingly.</t></abstract></front>

<seriesInfo name='RFC' value='6874' />
<format type='TXT' octets='19361' target='http://www.rfc-editor.org/rfc/rfc6874.txt' />
</reference>


<reference anchor="MS-DTYP" target="http://msdn.microsoft.com/en-us/library/gg465305.aspx">
  <front>
    <title>Windows Data Types, 2.2.56 UNC</title>
    <author >
      <organization>Microsoft Open Specifications</organization>
    </author>
    <date year="2013" month="January"/>
  </front>
</reference>
<reference anchor="MS-NBTE" target="http://msdn.microsoft.com/en-us/library/dd891412.aspx">
  <front>
    <title>NetBIOS over TCP (NBT) Extensions</title>
    <author >
      <organization>Microsoft Open Specifications</organization>
    </author>
    <date year="2014" month="May"/>
  </front>
</reference>
<reference anchor="ISO10646" >
  <front>
    <title>Information Technology - Universal Multiple-Octet Coded Character Set (UCS)</title>
    <author >
      <organization>International Organization for Standardization</organization>
    </author>
    <date year="2003" month="December"/>
  </front>
  <seriesInfo name="ISO/IEC" value="10646:2003"/>
</reference>
<reference anchor="UTR15" >
  <front>
    <title>Unicode Normalization Forms</title>
    <author initials="M." surname="Davis" fullname="Mark Davis">
      <organization></organization>
    </author>
    <author initials="K." surname="Whistler" fullname="Ken Whistler">
      <organization></organization>
    </author>
    <date year="2012" month="August" day="31"/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

<reference anchor="STD63" >
  <front>
    <title>UTF-8, a transformation format of ISO 10646</title>
    <author initials="F." surname="Yergeau" fullname="F. Yergeau">
      <organization></organization>
    </author>
    <date year="2003" month="November"/>
  </front>
  <seriesInfo name="STD" value="63"/>
  <seriesInfo name="RFC" value="3629"/>
</reference>




<reference anchor='RFC1630'>

<front>
<title abbrev='URIs in WWW'>Universal Resource Identifiers in WWW: A Unifying Syntax for the Expression of Names and Addresses of Objects on the Network as used in the World-Wide Web</title>
<author initials='T.' surname='Berners-Lee' fullname='Tim Berners-Lee'>
<organization>CERN, World-Wide Web project</organization>
<address>
<postal>
<street>1211 Geneva 23</street>
<city />
<region />
<code />
<country>CH</country></postal>
<phone>+41 22 7673755</phone>
<facsimile>+41 22 7677155</facsimile>
<email>timbl@info.cern.ch</email></address></author>
<date year='1994' month='June' /></front>

<seriesInfo name='RFC' value='1630' />
<format type='TXT' octets='57601' target='http://www.rfc-editor.org/rfc/rfc1630.txt' />
</reference>



<reference anchor='RFC1738'>

<front>
<title>Uniform Resource Locators (URL)</title>
<author initials='T.' surname='Berners-Lee' fullname='Tim Berners-Lee'>
<organization>CERN, World-Wide Web project</organization>
<address>
<postal>
<street>1211 Geneva 23</street>
<city />
<region />
<code />
<country>CH</country></postal>
<phone>+41 22 7673755</phone>
<facsimile>+41 22 7677155</facsimile>
<email>timbl@info.cern.ch</email></address></author>
<author initials='L.' surname='Masinter' fullname='Larry Masinter'>
<organization>Xerox PARC</organization>
<address>
<postal>
<street>3333 Coyote Hill Road</street>
<city>Palo Alto</city>
<region>CA</region>
<code>94034</code>
<country>US</country></postal>
<phone>+1 415 812 4365</phone>
<facsimile>+1 415 812 4333</facsimile>
<email>masinter@parc.xerox.com</email></address></author>
<author initials='M.' surname='McCahill' fullname='Mark McCahill'>
<organization>University of Minnesota, Computer and Information Services</organization>
<address>
<postal>
<street>100 Union Street SE, Shepherd Labs</street>
<street>Room 152</street>
<city>Minneapolis</city>
<region>MN</region>
<code>55455</code>
<country>US</country></postal>
<phone>+1 612 625 1300</phone>
<email>mpm@boombox.micro.umn.edu</email></address></author>
<date year='1994' month='December' />
<abstract>
<t>This document specifies a Uniform Resource Locator (URL), the syntax and semantics of formalized information for location and access of resources via the Internet.</t></abstract></front>

<seriesInfo name='RFC' value='1738' />
<format type='TXT' octets='51348' target='http://www.rfc-editor.org/rfc/rfc1738.txt' />
</reference>



<reference anchor='RFC3530'>

<front>
<title>Network File System (NFS) version 4 Protocol</title>
<author initials='S.' surname='Shepler' fullname='S. Shepler'>
<organization /></author>
<author initials='B.' surname='Callaghan' fullname='B. Callaghan'>
<organization /></author>
<author initials='D.' surname='Robinson' fullname='D. Robinson'>
<organization /></author>
<author initials='R.' surname='Thurlow' fullname='R. Thurlow'>
<organization /></author>
<author initials='C.' surname='Beame' fullname='C. Beame'>
<organization /></author>
<author initials='M.' surname='Eisler' fullname='M. Eisler'>
<organization /></author>
<author initials='D.' surname='Noveck' fullname='D. Noveck'>
<organization /></author>
<date year='2003' month='April' />
<abstract>
<t>The Network File System (NFS) version 4 is a distributed filesystem protocol which owes heritage to NFS protocol version 2, RFC 1094, and version 3, RFC 1813.  Unlike earlier versions, the NFS version 4 protocol supports traditional file access while integrating support for file locking and the mount protocol.  In addition, support for strong security (and its negotiation), compound operations, client caching, and internationalization have been added.  Of course, attention has been applied to making NFS version 4 operate well in an Internet environment.  This document replaces RFC 3010 as the definition of the NFS version 4 protocol. [STANDARDS-TRACK]</t></abstract></front>

<seriesInfo name='RFC' value='3530' />
<format type='TXT' octets='600988' target='http://www.rfc-editor.org/rfc/rfc3530.txt' />
</reference>


<reference anchor='I-D.draft-hoffman-file-uri'>
  <front>
    <title>The file URI Scheme</title>
    <author initials='P.' surname='Hoffman' fullname='Paul Hoffman'>
      <organization>VPN Consortium</organization>
      <address>
        <postal>
          <street>127 Segre Place</street>
          <city>Santa Cruz</city>
          <region>CA</region>
          <code>95060</code>
        </postal>
      </address>
    </author>
    <date month='January' year='2005' />
  </front>
  <seriesInfo name='Internet-Draft' value='draft-hoffman-file-uri-03' />
  <format type='TXT' target='http://www.ietf.org/internet-drafts/draft-hoffman-file-uri-03.txt' />
</reference>


<reference anchor="WHATWG-URL" target="http://url.spec.whatwg.org/">
  <front>
    <title>URL Living Standard</title>
    <author >
      <organization>WHATWG</organization>
    </author>
    <date year="2013" month="May"/>
  </front>
</reference>
<reference anchor="MS-SMB" target="http://msdn.microsoft.com/en-us/library/cc246231.aspx">
  <front>
    <title>Server Message Block (SMB) Protocol</title>
    <author >
      <organization>Microsoft Open Specifications</organization>
    </author>
    <date year="2013" month="January"/>
  </front>
</reference>
<reference anchor="NOVELL" target="http://www.novell.com/developer/ndk/netware_core_protocols.html">
  <front>
    <title>NetWare Core Protocols</title>
    <author >
      <organization>Novell</organization>
    </author>
    <date year="2013"/>
  </front>
</reference>
<reference anchor="POSIX" >
  <front>
    <title>IEEE Std 1003.1, 2013 Edition</title>
    <author >
      <organization>IEEE</organization>
    </author>
    <date year="2013"/>
  </front>
</reference>
<reference anchor="Win32-Namespaces" >
  <front>
    <title>Naming Files, Paths, and Namespaces</title>
    <author >
      <organization>Microsoft Developer Network</organization>
    </author>
    <date year="2013" month="June"/>
  </front>
</reference>


    </references>


<section anchor="unc-syntax" title="UNC Syntax">

<t>The syntax of a UNC filespace selector string, as defined by
<xref target="MS-DTYP"/>, is given here in Augmented Backus-Naur Form (ABNF)
<xref target="RFC5234"/> for convenience:</t>

<figure><artwork><![CDATA[
   UNC = "\\" hostname "\" sharename \*( "\" objectname )
   hostname   = netbios-name / fqdn / ip-address
   sharename  = <name of share or resource to be accessed>
   objectname = <depends on resource being accessed>
]]></artwork></figure>

<t><list style="symbols">
  <t><spanx style="verb">netbios-name</spanx> from <xref target="MS-NBTE"/>, Section 2.2.1<!--http://msdn.microsoft.com/en-us/library/dd891456.aspx-->.</t>
  <t><spanx style="verb">fqdn</spanx> from <xref target="RFC1035"/> or <xref target="RFC1123"/></t>
  <t><spanx style="verb">ip-address</spanx> from Section 2.1 of <xref target="RFC1123"/>, or Section 2.2 of <xref target="RFC4291"/>.</t>
</list></t>

<t>The precise format of <spanx style="verb">sharename</spanx> depends on the protocol;
see SMB <xref target="MS-SMB"/>, NFS <xref target="RFC3530"/>, NCP <xref target="NOVELL"/>.</t>

<t>The UNC filespace selector string is a null-terminated sequence of
characters from the Universal Character Set <xref target="ISO10646"/>.</t>

</section>


  </back>
</rfc>

