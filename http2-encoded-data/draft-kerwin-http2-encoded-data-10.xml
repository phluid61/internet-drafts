<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.39 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-kerwin-http2-encoded-data-10" category="exp">

  <front>
    <title abbrev="http2-encoded-data">HTTP/2 Gzipped Data</title>

    <author initials="M." surname="Kerwin" fullname="Matthew Kerwin">
      <organization></organization>
      <address>
        <email>matthew@kerwin.net.au</email>
        <uri>http://matthew.kerwin.net.au/</uri>
      </address>
    </author>

    <date year="2016"/>

    <area>Applications and Real-Time</area>
    
    <keyword>HTTP</keyword> <keyword>H2</keyword> <keyword>GZIP</keyword>

    <abstract>


<t>This document introduces a new frame type for transporting gzip-encoded data between peers in the
Hypertext Transfer Protocol Version 2 (HTTP/2), and an associated error code for handling
invalid encoding.</t>

<t><spanx style="strong">Note to Readers</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/phluid61/internet-drafts/labels/HTTP%2F2%20Gzipped%20Data">https://github.com/phluid61/internet-drafts/labels/HTTP%2F2%20Gzipped%20Data</eref></t>

<t>The most recent (often unpublished) draft is at <eref target="http://phluid61.github.io/internet-drafts/http2-encoded-data/">http://phluid61.github.io/internet-drafts/http2-encoded-data/</eref></t>



    </abstract>


  </front>

  <middle>


<section anchor="intro" title="Introduction">

<t>This document introduces a mechanism for applying gzip encoding <xref target="RFC1952"/> to data
transported between two endpoints in the Hypertext Transfer Protocol Version 2 (HTTP/2) <xref target="RFC7540"/>,
analogous to Transfer-Encoding in HTTP/1.1 <xref target="RFC7230"/>.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="additions" title="Additions to HTTP/2">

<t>This document introduces a new HTTP/2 frame type (<xref target="RFC7540"/>, Section 11.2),
a new HTTP/2 setting (<xref target="RFC7540"/>, Section 11.3),
and a new HTTP/2 error code (<xref target="RFC7540"/>, Section 7), to allow the compression
of data.</t>

<t>Note that while compressing some or all data in a stream might affect the total length of the
corresponding HTTP message body, the <spanx style="verb">content-length</spanx> header, if present, should continue to
reflect the total length of the <spanx style="emph">uncompressed</spanx> data. This is particularly relevant when detecting
malformed messages (<xref target="RFC7540"/>, Section 8.1.2.6).</t>

<section anchor="accept-gzipped-data" title="SETTINGS_ACCEPT_GZIPPED_DATA">

<t><cref anchor="NOTE-1" source="MK">This is an experimental value; if standardised, a permanent value will be assigned.</cref></t>

<t>SETTINGS_ACCEPT_GZIPPED_DATA (0xf000) is used to indicate the sender’s ability and
willingness to receive GZIPPED_DATA frames. An endpoint MUST NOT send a GZIPPED_DATA
frame unless it receives this setting with a value of 1.</t>

<t>The initial value is 0, which indicates that GZIPPED_DATA frames are not supported. Any
value other than 0 or 1 MUST be treated as a connection error (<xref target="RFC7540"/>, Section 5.4.1)
of type PROTOCOL_ERROR.</t>

<t>An endpoint may advertise support for GZIPPED_DATA frames and later decide that it no longer
supports them.  After sending an ACCEPT_GZIPPED_DATA setting with the value 0, the endpoint
SHOULD continue to accept GZIPPED_DATA frames for a reasonable amount of time to account for
frames that may already be in flight.</t>

</section>
<section anchor="gzipped-data" title="GZIPPED_DATA">

<t><cref anchor="NOTE-2" source="MK">This is an experimental value; if standardised, a permanent value will be assigned.</cref></t>

<t>GZIPPED_DATA frames (type code=0xf000) are semantically identical to DATA frames
(<xref target="RFC7540"/>, Section 6.1), but their payload is encoded using gzip compression.
Significantly: the order of DATA and GZIPPED_DATA frames is semantically significant; and
GZIPPED_DATA frames are subject to flow control (<xref target="RFC7540"/>, Section 5.2).
Gzip compression is an LZ77 coding with a 32 bit CRC that is commonly produced
by the gzip file compression program <xref target="RFC1952"/>.</t>

<t>Any compression or decompression context for a GZIPPED_DATA frame is unique to that frame.
An endpoint MAY interleave DATA and GZIPPED_DATA frames on a single stream.</t>

<figure title="GZIPPED_DATA Frame Payload"><artwork><![CDATA[
  +---------------+
  |Pad Length? (8)|
  +---------------+-----------------------------------------------+
  |                            Data (*)                         ...
  +---------------------------------------------------------------+
  |                           Padding (*)                       ...
  +---------------------------------------------------------------+
]]></artwork></figure>

<t>The GZIPPED_DATA frame contains the following fields:</t>

<t><list style="symbols">
  <t>Pad Length:
An 8-bit field containing the length of the frame padding in units
of octets. This field is optional and is only present if the
PADDED flag is set.</t>
  <t>Data:
Encoded application data. The amount of encoded data is the remainder of the frame
payload after subtracting the length of the other fields that are
present.</t>
  <t>Padding:
Padding octets that contain no application semantic value. Padding
octets MUST be set to zero when sending and ignored when receiving.</t>
</list></t>

<t>The GZIPPED_DATA frame defines the following flags:</t>

<t><list style="symbols">
  <t><spanx style="verb">END_STREAM</spanx> (0x1):
Bit 1 being set indicates that this frame is the last that the
endpoint will send for the identified stream. Setting this flag
causes the stream to enter one of the “half closed” states or the
“closed” state (<xref target="RFC7540"/>, Section 5.1).</t>
  <t><spanx style="verb">PADDED</spanx> (0x8):
Bit 4 being set indicates that the Pad Length field is present.</t>
</list></t>

<t>A GZIPPED_DATA frame MUST NOT be sent if the ACCEPT_GZIPPED_DATA setting
of the peer is set to 0.  See <xref target="experiment"/>.</t>

<t>An intermediary, on receiving a GZIPPED_DATA frame, MAY decode the data and forward it to its
downstream peer in one or more DATA frames. If the downstream peer has not advertised support
for GZIPPED_DATA frames (by sending an ACCEPT_GZIPPED_DATA setting with the value 1) the
intermediary MUST decode the data before forwarding it.</t>

<t>If an endpoint detects that the payload of a GZIPPED_DATA frame is not encoded correctly,
for example with an incorrect checksum, the endpoint MUST
treat this as a stream error (see <xref target="RFC7540"/>, Section 5.4.2) of type
DATA_ENCODING_ERROR (<xref target="error"/>). The endpoint MAY then choose to immediately send an
ACCEPT_GZIPPED_DATA setting with the value 0.</t>

<t>If an intermediary propagates a GZIPPED_DATA frame from the source peer to the destination peer
without modifying the payload or its encoding, and receives a DATA_ENCODING_ERROR from the
receiving peer, it SHOULD pass the error on to the source peer.</t>

<t>GZIPPED_DATA frames MUST be associated with a stream. If a GZIPPED_DATA frame is received whose
stream identifier field is 0x0, the recipient MUST respond with a connection error
(<xref target="RFC7540"/>, Section 5.4.1) of type PROTOCOL_ERROR.</t>

<t>GZIPPED_DATA frames are subject to flow control and can only be sent when a stream is in the
“open” or “half closed (remote)” states. The entire GZIPPED_DATA frame payload is included in flow
control, including the Pad Length and Padding fields if present. If a
GZIPPED_DATA frame is received whose stream is not in “open” or “half closed (local)” state, the
recipient MUST respond with a stream error (<xref target="RFC7540"/>, Section 5.4.2) of type
STREAM_CLOSED.</t>

<t>GZIPPED_DATA frames can include padding.  Padding fields and flags are identical to those defined
for DATA frames (<xref target="RFC7540"/>, Section 6.1).</t>

</section>
<section anchor="error" title="DATA_ENCODING_ERROR">

<t>The following new error code is defined:</t>

<t><list style="symbols">
  <t><spanx style="verb">DATA_ENCODING_ERROR</spanx> (0xf0000000):
The endpoint detected that its peer sent a GZIPPED_DATA frame with an invalid encoding.  <vspace blankLines='1'/>
<cref anchor="NOTE-3" source="MK">This is an experimental value; if standardised, a permanent value will be assigned.</cref></t>
</list></t>

</section>
</section>
<section anchor="experiment" title="Experimental Status">

<t>This extension is classified as an experiment because it alters the base semantics of HTTP/2;
a change that, if specified insufficiently or implemented incorrectly, could result in data loss
that is hard to detect or diagnose.</t>

<t><xref target="RFC7540"/>, Section 5.5, mandates that “implementations MUST discard frames that have unknown
or unsupported types”; so if an endpoint or intermediary mishandles GZIPPED_DATA frames, for
example by incorrectly emitting an ACCEPT_GZIPPED_DATA setting or propagating GZIPPED_DATA
frames, and those frames are subsequently discarded, data will be lost.  There is no reliable
mechanism to detect such a loss[*].</t>

<t>The experiment therefore is to explore the robustness of the HTTP/2 ecosystem in the presence of
such potential failures.</t>

<t>[*] For some unreliable mechanisms (i.e. not guaranteed to be in use in all cases, and/or
requiring inspection of HTTP headers) see:</t>

<t><list style="symbols">
  <t>Section 8.1.2.6 of <xref target="RFC7540"></xref>, for using the content-length header to detect malformed messages</t>
  <t><xref target="RFC3230"></xref>, for HTTP instance digests</t>
</list></t>

</section>
<section anchor="security" title="Security Considerations">

<t>Further to the Use of Compression in HTTP/2 (<xref target="RFC7540"/>, Section 10.6),
intermediaries MUST NOT apply compression to DATA frames, or alter the compression of
GZIPPED_DATA frames other than decompressing, unless additional information is available
that allows the intermediary to identify the source of data. In particular, frames that
are not compressed cannot be compressed, and frames that are separately compressed cannot
be merged into a single compressed frame.</t>

</section>
<section anchor="iana" title="IANA Considerations">

<t>This document updates the registries for frame types, settings, and error codes in
the “Hypertext Transfer Protocol (HTTP) 2 Parameters” section.</t>

<section anchor="http2-frame-type-registry-update" title="HTTP/2 Frame Type Registry Update">

<t>This document updates the “HTTP/2 Frame Type” registry
(<xref target="RFC7540"/>, Section 11.2).  The entries in the
following table are registered by this document.</t>

<texttable>
      <ttcol align='left'>Frame Type</ttcol>
      <ttcol align='left'>Code</ttcol>
      <ttcol align='left'>Section</ttcol>
      <c>GZIPPED_DATA</c>
      <c>TBD</c>
      <c><xref target="gzipped-data"/></c>
</texttable>

</section>
<section anchor="http2-settings-registry-update" title="HTTP/2 Settings Registry Update">

<t>This document updates the “HTTP/2 Settings” registry
(<xref target="RFC7540"/>, Section 11.3).  The entries in the
following table are registered by this document.</t>

<texttable>
      <ttcol align='left'>Frame Type</ttcol>
      <ttcol align='left'>Code</ttcol>
      <ttcol align='left'>Initial Value</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>ACCEPT_GZIPPED_DATA</c>
      <c>TBD</c>
      <c>0</c>
      <c><xref target="accept-gzipped-data"/></c>
</texttable>

</section>
<section anchor="http2-error-code-registry-update" title="HTTP/2 Error Code Registry Update">

<t>This document updates the “HTTP/2 Error Code” registry
(<xref target="RFC7540"/>, Section 11.4).  The entries in the
following table are registered by this document.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Code</ttcol>
      <ttcol align='left'>Description</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>DATA_ENCODING_ERROR</c>
      <c>TBD</c>
      <c>Invalid encoding detected</c>
      <c><xref target="error"/></c>
</texttable>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Keith Morgan for his advice, input, and editorial contributions.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor='RFC1952' target='http://www.rfc-editor.org/info/rfc1952'>
<front>
<title>GZIP file format specification version 4.3</title>
<author initials='P.' surname='Deutsch' fullname='P. Deutsch'><organization /></author>
<date year='1996' month='May' />
<abstract><t>This specification defines a lossless compressed data format that is compatible with the widely used GZIP utility.  This memo provides information for the Internet community.  This memo does not specify an Internet standard of any kind.</t></abstract>
</front>
<seriesInfo name='RFC' value='1952'/>
<seriesInfo name='DOI' value='10.17487/RFC1952'/>
</reference>



<reference  anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor='RFC7540' target='http://www.rfc-editor.org/info/rfc7540'>
<front>
<title>Hypertext Transfer Protocol Version 2 (HTTP/2)</title>
<author initials='M.' surname='Belshe' fullname='M. Belshe'><organization /></author>
<author initials='R.' surname='Peon' fullname='R. Peon'><organization /></author>
<author initials='M.' surname='Thomson' fullname='M. Thomson' role='editor'><organization /></author>
<date year='2015' month='May' />
<abstract><t>This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP), referred to as HTTP version 2 (HTTP/2).  HTTP/2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection.  It also introduces unsolicited push of representations from servers to clients.</t><t>This specification is an alternative to, but does not obsolete, the HTTP/1.1 message syntax.  HTTP's existing semantics remain unchanged.</t></abstract>
</front>
<seriesInfo name='RFC' value='7540'/>
<seriesInfo name='DOI' value='10.17487/RFC7540'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor='RFC7230' target='http://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor='RFC3230' target='http://www.rfc-editor.org/info/rfc3230'>
<front>
<title>Instance Digests in HTTP</title>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<author initials='A.' surname='Van Hoff' fullname='A. Van Hoff'><organization /></author>
<date year='2002' month='January' />
<abstract><t>HTTP/1.1 defines a Content-MD5 header that allows a server to include a digest of the response body.  However, this is specifically defined to cover the body of the actual message, not the contents of the full file (which might be quite different, if the response is a Content-Range, or uses a delta encoding).  Also, the Content-MD5 is limited to one specific digest algorithm; other algorithms, such as SHA-1 (Secure Hash Standard), may be more appropriate in some circumstances.  Finally, HTTP/1.1 provides no explicit mechanism by which a client may request a digest.  This document proposes HTTP extensions that solve these problems.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3230'/>
<seriesInfo name='DOI' value='10.17487/RFC3230'/>
</reference>




    </references>


<section anchor="changelog" title="Changelog">

<t>Since -09:</t>

<t><list style="symbols">
  <t>(editorial) use ‘cref’ elements for notes</t>
</list></t>

<t>Since -08:</t>

<t><list style="symbols">
  <t>use experimental values for frame/setting/error codes</t>
</list></t>

<t>Since -07:</t>

<t><list style="symbols">
  <t>define “reliable” in the ‘experimental’ section, and provide pointers
to potential workarounds</t>
  <t>remove fragmentation, since the text added no value</t>
</list></t>

<t>Since -06:</t>

<t><list style="symbols">
  <t>change document title from “Encoded” to “Gzipped”</t>
  <t>improve text under GZIPPED_DATA (<xref target="gzipped-data"/>)</t>
  <t>clarify that GZIPPED_DATA and DATA can be interleaved</t>
  <t>explain experimental status and risks of broken implementations</t>
</list></t>

<t>Since -05:</t>

<t><list style="symbols">
  <t>changed ACCEPT_ENCODED_DATA back from a frame to a setting, since it
carries a single scalar value now</t>
</list></t>

<t>Since -04:</t>

<t><list style="symbols">
  <t>reduced encoding options to only gzip (suggested by Martin Thomson)</t>
  <t>remove fragmentation and segment stuff, including reference to ‘http2-segments’ I-D</t>
  <t>updated HTTP/2 reference from I-D to (freshly published) RFC7230</t>
</list></t>

<t>Since -03:</t>

<t><list style="symbols">
  <t>added ‘identity’ encoding; removed ‘compress’ and ‘zlib’ (suggested by PHK)</t>
  <t>added SEGMENT flag, for segments that don’t continue</t>
  <t>clarified that ACCEPT is for a connection, and ENCODED_DATA is for a stream</t>
  <t>copied “padding” text from HTTP/2 draft</t>
</list></t>

<t>Since -02:</t>

<t><list style="symbols">
  <t>moved all discussion of fragmentation and segments to its own section</t>
</list></t>

<t>Since -01:</t>

<t><list style="symbols">
  <t>referenced new draft-kerwin-http2-segments to handle fragmentation</t>
</list></t>

<t>Since -00:</t>

<t><list style="symbols">
  <t>changed ACCEPT_ENCODED_DATA from a complex setting to a frame</t>
  <t>improved IANA Considerations section (with lots of input from Keith Morgan)</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
u4dJVrD/cgqQ1ZupohsE/wctTazDETEAAA==

-->

</rfc>

